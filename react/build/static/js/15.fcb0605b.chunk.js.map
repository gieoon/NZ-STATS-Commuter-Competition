{"version":3,"sources":["assets/search.svg","../node_modules/react-feather/dist/icons/search.js","../node_modules/react-feather/dist/icons/x.js","../node_modules/react-use/esm/useDebounce.js","../node_modules/react-use/esm/useTimeoutFn.js","components/search.js","components/searchbar.js"],"names":["module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Search","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","propTypes","PropTypes","string","oneOfType","number","displayName","X","useDebounce","fn","ms","deps","_a","ready","useRef","timeout","callback","isReady","useCallback","current","set","clearTimeout","setTimeout","clear","useEffect","useTimeoutFn","cancel","reset","locationSuggestions","memo","setClickedData","mapRef","useState","searchValue","setSearchValue","expand","setExpand","results","setResults","searchInput","t","useTranslation","engine","setEngine","allCentroidDestinations","useStickySWR","DATA_URL_ROOT","fetcher","revalidateOnMount","revalidateOnFocus","data","console","log","then","Bloodhound","default","initialize","local","map","a","DEPARTURE_NAME_2","datumTokenizer","tokenizers","whitespace","queryTokenizer","handleSearch","search","datums","result","index","obj","values","find","o","push","name","produce","draftResults","splice","useTrail","transform","opacity","config","stiff","trail","className","label","style","div","type","value","onFocus","event","onBlur","onChange","id","onClick","to","route","departure_LATITUDE","departure_LONGITUDE","leafletElement","setView","updateData","DEPARTURE_NAME_1","cluster_count","Fragment","suggestion","onMouseDown","preventDefault","element","valueSetter","getOwnPropertyDescriptor","getPrototypeOf","prototypeValueSetter","setNativeValue","dispatchEvent","Event","bubbles","SearchBar"],"mappings":"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","file":"static/js/15.fcb0605b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.b2add8ac.svg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Search = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"11\",\n    cy: \"11\",\n    r: \"8\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    y1: \"21\",\n    x2: \"16.65\",\n    y2: \"16.65\"\n  }));\n});\nSearch.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nSearch.displayName = 'Search';\nexport default Search;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar X = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"18\",\n    y1: \"6\",\n    x2: \"6\",\n    y2: \"18\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"6\",\n    y1: \"6\",\n    x2: \"18\",\n    y2: \"18\"\n  }));\n});\nX.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nX.displayName = 'X';\nexport default X;","import { useEffect } from 'react';\nimport useTimeoutFn from './useTimeoutFn';\nexport default function useDebounce(fn, ms, deps) {\n    if (ms === void 0) { ms = 0; }\n    if (deps === void 0) { deps = []; }\n    var _a = useTimeoutFn(fn, ms), isReady = _a[0], cancel = _a[1], reset = _a[2];\n    useEffect(reset, deps);\n    return [isReady, cancel];\n}\n","/* eslint-disable */\nimport { useCallback, useEffect, useRef } from 'react';\nexport default function useTimeoutFn(fn, ms) {\n    if (ms === void 0) { ms = 0; }\n    var ready = useRef(false);\n    var timeout = useRef();\n    var callback = useRef(fn);\n    var isReady = useCallback(function () { return ready.current; }, []);\n    var set = useCallback(function () {\n        ready.current = false;\n        timeout.current && clearTimeout(timeout.current);\n        timeout.current = setTimeout(function () {\n            ready.current = true;\n            callback.current();\n        }, ms);\n    }, [ms]);\n    var clear = useCallback(function () {\n        ready.current = null;\n        timeout.current && clearTimeout(timeout.current);\n    }, []);\n    // update ref when function changes\n    useEffect(function () {\n        callback.current = fn;\n    }, [fn]);\n    // set on mount, clear on unmount\n    useEffect(function () {\n        set();\n        return clear;\n    }, [ms]);\n    return [isReady, clear, set];\n}\n","import React, {useState, useRef, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTrail, animated, config} from 'react-spring';\nimport {useDebounce, useUpdateEffect} from 'react-use';\nimport produce from 'immer';\nimport {capitalize, fetcher } from '../utils/commonFunctions';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {\n    CITY_NAMES,\n    DATA_URL_ROOT\n} from '../constants';\nimport useStickySWR from \"../hooks/useStickySwr\";\n\nconst locationSuggestions = [\n    \"Auckland\",\n    // \"Wellington\",\n    \"Waitakere\",\n    \"Christchurch\",\n    \"Queenstown\",\n]\n\nfunction Search({\n  // allCentroidDestinations,\n  setClickedData,\n  mapRef\n}){\n    const [searchValue, setSearchValue] = useState('');\n    const [expand, setExpand] = useState(false);\n    const [results, setResults] = useState([]);\n    const searchInput = useRef(null);\n    const {t} = useTranslation();\n\n    const [engine, setEngine] = useState(null);\n    // console.log(\"allCentroidDestinations: \", allCentroidDestinations)\n    // console.log(\"CITY_NAMES: \", CITY_NAMES);\n    // console.log(\"centroidData[15]: \", centroidData[15]);\n    //useUpdateEffect(()=>{\n\n    // Data to load for search\n    const { data: allCentroidDestinations } = useStickySWR(\n      DATA_URL_ROOT + '/allCentroidDestinations',\n      fetcher,\n      {\n        revalidateOnMount: true,\n        revalidateOnFocus: false\n      }\n    )\n    \n    useEffect(()=>{\n      if(allCentroidDestinations){\n        console.log('creating bloodhound')\n        import('corejs-typeahead').then(Bloodhound => {\n            // console.log(Bloodhound);\n            setEngine(\n                // eslint-disable-next-line\n                new Bloodhound.default({\n                    initialize: true,\n                    // Should be using remote\n                    local: \n                    //Object.keys(CITY_NAMES),\n                    allCentroidDestinations.map(a => a.DEPARTURE_NAME_2),\n                    datumTokenizer: Bloodhound.tokenizers.whitespace,\n                    queryTokenizer: Bloodhound.tokenizers.whitespace,\n                    // queryTokenizer: Bloodhound.default.tokenizers.whitespace,\n                    // datumTokenizer: Bloodhound.default.tokenizers.whitespace,\n                    //datumTokenizer: Bloodhound.default.tokenizers.obj.whitespace('name'),\n                })\n            )\n        })\n      }\n    }\n    ,[allCentroidDestinations]\n    )\n\n    const handleSearch = useCallback((searchInput)=>{\n        if(!engine)\n            return null;\n        const results = [];\n\n        const sync = (datums) => {\n            // console.log(datums);\n            datums.map((result, index) => {\n                // console.log(\"search result: \", result);\n                var obj = Object.values(allCentroidDestinations).find(o => o.DEPARTURE_NAME_2 === result);\n                // console.log(destinationData)\n                // var obj = allCentroidDestinations[result]\n                // console.log(obj)\n                results.push({name: result, ...obj});\n                return null;\n            })\n\n            setResults([...results]);\n        }\n        engine.search(searchInput, sync);\n    },[\n        engine\n    ]);\n\n    useDebounce(\n      ()=>{\n          if(searchValue) {\n              setClickedData({});\n              handleSearch(searchValue);\n          } else {\n              setResults(\n                  produce(results, (draftResults) => {\n                      draftResults.splice(0);\n                  })\n              );\n          }\n      },\n      100,\n      [searchValue]\n    );\n\n    function setNativeValue(element, value){\n        const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n        const prototype = Object.getPrototypeOf(element);\n        const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n            prototype,\n            'value'\n        ).set;\n\n        if(valueSetter && valueSetter !== prototypeValueSetter){\n            prototypeValueSetter.call(element, value);\n        } else {\n            valueSetter.call(element, value);\n        }\n    }\n\n    const [trail, set] = useTrail(3, () => ({\n        transform: 'translate3d(0, 10px, 0)',\n        opacity: 0,\n        config: config.stiff,\n    }));\n\n    set({transform: 'translate3d(0, 0px, 0)', opacity: 1});\n\n    return (\n        <div className=\"Search\">\n          <animated.label style={trail[0]}>\n            {t('Search a location in NZ')}\n          </animated.label>\n          {/* <animated.div className=\"line\" style={trail[1]}></animated.div> */}\n    \n          <animated.div className=\"search-input-wrapper\" style={trail[2]}>\n            <input\n              type=\"text\"\n              value={searchValue}\n              ref={searchInput}\n              onFocus={(event) => {\n                setExpand(true);\n              }}\n              onBlur={() => {\n                setExpand(false);\n              }}\n              onChange={(event) => {\n                setSearchValue(event.target.value);\n              }}\n            />\n            <span id=\"search-placeholder\" className=\"search-placeholder\"></span>\n    \n            <div className={`search-button`}>\n              <Icon.Search />\n            </div>\n    \n            {searchValue.length > 0 && (\n              <div\n                className={`close-button`}\n                onClick={() => {\n                  setSearchValue('');\n                  setResults([]);\n                }}\n              >\n                <Icon.X />\n              </div>\n            )}\n          </animated.div>\n    \n          {results.length > 0 && (\n            <div className=\"results\">\n              {results.map((result, index) => {\n                if (result.type === 'state' || result.type === 'district') {\n                  return (\n                    <Link key={index} to={`location/${result.route}`}>\n                        Link to location\n                      {/* <div className=\"result\">\n                        <div className=\"result-left\">\n                          <div className=\"result-name\">\n                            {`${result.name}`}\n                            {result.type === 'district' &&\n                              `, ${STATE_NAMES[result.route]}`}\n                          </div>\n                        </div>\n                        <div className=\"result-type\">\n                          <span>{[result.route]}</span>\n                          <Icon.ArrowRightCircle size={14} />\n                        </div>\n                      </div> */}\n                    </Link>\n                  );\n                } else {\n                  return (\n                    <Link\n                      key={index}\n                      //window.location.href + \n                      to={\"../../../location/\" + result.departure_LATITUDE + \"/\" + result.departure_LONGITUDE + \"/12\"}\n                      // target=\"_noblank\"\n                      className=\"essential-result\"\n\n                      onClick={()=>{\n                        setSearchValue('');\n                        setResults([]);\n                        mapRef.current.leafletElement.setView(\n                          [\n                            result.departure_LATITUDE,\n                            result.departure_LONGITUDE\n                          ], 12\n                        ); //9\n                        mapRef.current.leafletElement.updateData();\n                      }}\n                    >\n                      <div className=\"result-top\">\n                        <div className=\"result-top-left\">\n                          <div className=\"result-name\">{result.DEPARTURE_NAME_2}</div>\n                          <div className=\"result-location\">\n                            {result.DEPARTURE_NAME_1}\n                            {/* Lng: {result.departure_LONGITUDE} */}\n                          </div>\n                        </div>\n                        <div className=\"result-category\">\n                          <div>\n                            {/* {capitalize(locationSuggestions[result.category])} */}\n                            {result.cluster_count} Commutes\n                          </div>\n                          {/* {result.departure_LATITUDE && <Icon.ExternalLink />} */}\n                        </div>\n                      </div>\n                      {/* <div className=\"result-description\">{result.DEPARTURE_NAME_1}</div> */}\n                      {/* <div className=\"result-contacts\">\n                        {result.contact.split('\\n').map((contact) => (\n                          <div key={contact} className=\"result-contact\">\n                            <Icon.Phone />\n                            <a href={`tel:${contact}`}>\n                              {contact.replace(',', '')}\n                            </a>\n                          </div>\n                        ))}\n                      </div> */}\n                    </Link>\n                  );\n                }\n              })}\n            </div>\n          )}\n    \n          {expand && (\n            <React.Fragment>\n              <div className=\"expanded\">\n                <div className=\"expanded-left\">\n                  <h3>{t('Suggested Locations')}</h3>\n                  <div className=\"suggestions\">\n                    {locationSuggestions.map((suggestion, index) => (\n                      <div className=\"suggestion\" key={index}>\n                        <div>-</div>\n                        <h4\n                          onMouseDown={(event) => {\n                            event.preventDefault();\n                            setNativeValue(searchInput.current, suggestion);\n                            searchInput.current.dispatchEvent(\n                              new Event('input', {bubbles: true})\n                            );\n                          }}\n                        >\n                          {t(suggestion)}\n                        </h4>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                <div className=\"expanded-right\">\n                  {/* <h3>{t('Locations')}</h3>\n                  <div className=\"suggestions\">\n                    {locationSuggestions.map((suggestion, index) => (\n                      <div className=\"suggestion\" key={index}>\n                        <div>-</div>\n                        <h4\n                          onMouseDown={(event) => {\n                            event.preventDefault();\n                            setNativeValue(searchInput.current, suggestion);\n                            searchInput.current.dispatchEvent(\n                              new Event('input', {bubbles: true})\n                            );\n                          }}\n                        >\n                          {t(suggestion)}\n                        </h4>\n                      </div>\n                    ))}\n                  </div> */}\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n        </div>\n    );\n}\n\nconst isEqual = () => {\n    return true;\n};\n\nexport default React.memo(Search, isEqual);\n","import React, {} from 'react';\nimport search from '../assets/search.svg';\nimport Search from './search';\n\nfunction SearchBar({\n    allCentroidDestinations,\n    setClickedData,\n    mapRef,\n}) {\n    return(\n        <React.Fragment>\n            {/* <div className=\"SearchBar\">\n                <input type=\"text\" />\n                <img src={search} className=\"search-img\" />\n            </div> */}\n\n            <Search \n                allCentroidDestinations={allCentroidDestinations} \n                setClickedData={setClickedData} \n                mapRef={mapRef}\n            />\n        </React.Fragment>\n    )\n}\n\nexport default SearchBar;\n"],"sourceRoot":""}